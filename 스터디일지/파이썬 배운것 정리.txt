김왼손 50회 까지 보고 설명하기
- 예제는 내가 직접 다른거로 한다.
- 따라쓰지 않고
print()
input()
my_int = 1
int, float, str, boolean, list, tuple, dict
int(),float(),str()
'문자열%s' % '문자열'
'%d %d' % (1, 2)
'문자열 {}'.format('문자열)
'{}+{}={}'.format(1, 2, 3)
변수이름[4]
변수이름[-1]
변수이름[1:4]
변수이름[:3]
변수이름[5:]
str변수이름.split()
end='' \n \t
list=[]
list.append=()
list[3]
list[1:4]
del list [4]
list.sort()
list.count
len(list)
tuple = ()
tuple = 123
tuple = 1, 2, 3
n1, n2, n3 = tuple
n1 = 1
n2 = 2
n3 = 3
#n1 = 2, n2 =1
n1, n2 = n2, n1
for 변수 in 컨테이너#list,1등 값#:
    명령1
    명령2 #코드블럭#
2단만 만들기 or 2+1부터 2+9까지
#컨테이너의 값이 끝날때까지 코드블럭 반복
range(0,5)
#list는 아니다 0부터 5 전 까지의 값이 들어간다.
for x2 
#구구단 만들기 or 2+1부터 9+9까지
=:할당
+= -= *= /=
count = count + 1
count += 1 이 같다.
count = count - 1
count -= 1 이 같다.
**:제곱 //:몫 %나머지
##홀짝 구분하기 % 사용해서##
if 1%2==1:
    print('홀수')
문자열 + *
비교연산자 == != > < >= <=
논리연산자 and or not
멤버쉽 연산자 in not in '값' in 변수
if 조건(식) :    명령1    명령2
if 조건(식):     명령1    명령2
else:    명령1    명령2
if 조건(식):    명령1    명령2
elif 조건(식):    명령1    명령2
else:    명령1    명령2

while 조건(식) :    명령1    명령2
### if와 while의 차이점###
continue를 만나면 다시 올라가서 실행한다.
break 를 만나면 실행할 것이 남아도 끝낸다.

dict{}
dict['key'] = 2
{'key':2}
del dict['key값']

dict.values()
for 변수 in dict.values():
    print(변수)
dict.keys()
for 변수 in dict.keys():
    print(변수)
dict.items()
for 변수 in dict.items():
    print(변수)

def 함수이름(인자1,인자2......):
    명령1
    명령2#없어도 된다.
     return 결과
함수이름 (인자1, 인자2)

def 함수이름(인자1,인자2......):
    명령1
    명령2#없어도 된다.
     return 결과1, 결과2

import random
print(random.choice(변수이름, 3))
###로또번호 뽑기(random.sample)###
random.randint()
